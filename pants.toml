[GLOBAL]
pants_version = "2.17.0"

print_stacktrace = true

backend_packages = [
  # "pants.backend.build_files.fmt.black",
  "pants.backend.codegen.protobuf.python",
  "pants.backend.docker",
  "pants.backend.docker.lint.hadolint",
  "pants.backend.python",

  # "pants.backend.python.lint.bandit",
  "pants.backend.python.lint.black",
  "pants.backend.python.lint.docformatter",
  "pants.backend.python.lint.flake8",
  "pants.backend.python.lint.isort",
#   "pants.backend.python.lint.pylint",
#   "pants.backend.python.typecheck.mypy",

  "pants.backend.python.mixed_interpreter_constraints",
]



[python]
interpreter_constraints = [">=3.11,<3.12"]

enable_resolves = true


[python.resolves]
python-default = "3rdparty/python/default.lock"
# python-default = "3rdparty/python/user_reqs.lock"
flake8 = "3rdparty/python/flake8.lock"
mypy = "3rdparty/python/mypy.lock"
# bandit = "3rdparty/python/bandit.lock"
black = "3rdparty/python/black.lock"
isort = "3rdparty/python/isort.lock"
# pytest = "3rdparty/python/pytest.lock"
docformatter = "3rdparty/python/docformatter.lock"

[docker]
build_args = ["GIT_COMMIT"]

# [bandit]
# config = "build-support/bandit.yaml"
# install_from_resolve = "bandit"
# requirements = ["//3rdparty/python:bandit"]

[black]
config = "build-support/pyproject.toml"
install_from_resolve = "black"
requirements = ["//3rdparty/python:black"]

[docformatter]
install_from_resolve = "docformatter"
requirements = ["//3rdparty/python:docformatter"]

[flake8]
config = "build-support/flake8.config"
install_from_resolve = "flake8"
requirements = ["//3rdparty/python:flake8"]

[isort]
# config = ["build-support/pyproject.toml"]
install_from_resolve = "isort"
requirements = ["//3rdparty/python:isort"]

# [mypy]
# config = "build-support/pyproject.toml"
# install_from_resolve = "mypy"
# requirements = ["//3rdparty/python:mypy"]


# [mypy-protobuf]
# version = "mypy-protobuf==2.10"
# # config = "build-support/pyproject.toml"
# lockfile = "build-support/mypy_protobuf_lockfile.txt"

# [pylint]
# version = "pylint==2.13.0"
# config = "build-support/pylint.config"
# lockfile = "build-support/pylint_lockfile.txt"

# [pytest]
# version = "pytest==7.0.1"
# config = "build-support/pyproject.toml"
# lockfile = "build-support/pytest_lockfile.txt"
